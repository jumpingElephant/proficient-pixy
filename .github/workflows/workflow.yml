name: Build and Publish Container

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  DOCKERFILE_PATH: ./Dockerfile

jobs:
  build-and-publish:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Build with Maven
        run: ./mvnw -B -ntp -DskipTests package

      - name: Compute tags
        id: meta
        run: |
          REPO_LC="${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')"
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
            TAGS="${REPO_LC}:${TAG}"
          elif [[ "${{ github.ref }}" == refs/heads/main ]]; then
            TAGS="${REPO_LC}:latest"
          else
            TAGS="${REPO_LC}:sha-${GITHUB_SHA::7}"
          fi
          echo "tags=${TAGS}" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build uses the Dockerfile that expects Maven-built artifacts in target/
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "Published image(s): ${{ steps.meta.outputs.tags }}"